F00:0001       ; elmerucr - 6/10/2019
F00:0002       ; compiles with vasmm68k_mot
F00:0003       
F00:0004       	include 'E64-II_kernel_definitions.asm'
F01:0001       ; c256 definitions - 2019-11-21 elmerucr
F01:0002       
F01:0003       ; ascii definitions
F01:0004       NULL	equ	$00
F01:0005       LF		equ	$0a
F01:0006       
F01:0007       ; register definitions
F01:0008       VICV_BASE	equ	$ffff0400 	; vicv base register
F01:0009       
F01:0010       ; sound
F01:0011       SOUND_BASE	equ $ffff0500	; sound base register
F01:0012       SID0_BASE	equ	SOUND_BASE
F01:0013       SID1_BASE	equ	SOUND_BASE+$20
F01:0014       ; sound indices
F01:0015       SID0_LEFT	equ $80
F01:0016       SID0_RGHT	equ $81
F01:0017       
F01:0018       CURR_TEXT_COLOR	equ $00008000
F00:0005       
F00:0006       	org $00000000
F00:0007       	dc.l	$00d00000				; vector 0 - supervisor stackpointer
               S01:00000000:  00 D0 00 00
F00:0008       	dc.l	kernel_main				; vector 1 - reset vector
               S01:00000004:  00 00 78 00
F00:0009       	org $00000010
F00:0010       	dc.l	exception_handler		; vector 4 - illegal instruction
               S02:00000010:  00 00 04 00
F00:0011       	org $00000028
F00:0012       	dc.l	exception_handler		; vector 10 - unimpl instruction
               S03:00000028:  00 00 04 00
F00:0013       	dc.l	exception_handler		; vector 11 - unimpl instruction
               S03:0000002C:  00 00 04 00
F00:0014       	org $0000007c
F00:0015       	dc.l	interrupt_autovector	; vector 31 - level 7 interrupt autovector
               S04:0000007C:  00 00 05 00
F00:0016       
F00:0017       ; fake exception handler
F00:0018       	org $00000400
F00:0019       exception_handler
F00:0020       	move.l #$deadbeef,d0
               S05:00000400:  20 3C DE AD BE EF
F00:0021       	rte
               S05:00000406:  4E 73
F00:0022       
F00:0023       ; level 7 interrupt autovector
F00:0024       	org $00000500
F00:0025       interrupt_autovector
F00:0026       	rte
               S06:00000500:  4E 73
F00:0027       
F00:0028       	org $00007000
F00:0029       aap
F00:0030       	dc.b	$fe
               S07:00007000:  FE
F00:0031       
F00:0032       ; start of main kernel code
F00:0033       	org	$7800
F00:0034       kernel_main
F00:0035       	; set screen colors
F00:0036       	move.b	#$0c,VICV_BASE
               S08:00007800:  13 FC 00 0C FF FF 04 00
F00:0037       	move.b	#$06,VICV_BASE+1
               S08:00007808:  13 FC 00 06 FF FF 04 01
F00:0038       	; set text color
F00:0039       	move.b	#$0c,CURR_TEXT_COLOR
               S08:00007810:  13 FC 00 0C 00 00 80 00
F00:0040       
F00:0041       
F00:0042       
F00:0043       	; play a welcome sound on SID0
F00:0044       	;
F00:0045       	lea		SID0_BASE,a0
               S08:00007818:  41 F9 FF FF 05 00
F00:0046       	; frequency of voice 1 (high byte)
F00:0047       	move.b	#$82,($01,a0)
               S08:0000781E:  11 7C 00 82 00 01
F00:0048       	; attack and decay of voice 1
F00:0049       	move.b	#$09,($05,a0)
               S08:00007824:  11 7C 00 09 00 05
F00:0050       	; freq of voice 3
F00:0051       	move.b	#$1e,($0f,a0)
               S08:0000782A:  11 7C 00 1E 00 0F
F00:0052       	; max volume
F00:0053       	move.b	#$0f,($18,a0)
               S08:00007830:  11 7C 00 0F 00 18
F00:0054       	; left channel mix
F00:0055       	move.b	#$ff,(SID0_LEFT,a0)
               S08:00007836:  11 7C 00 FF 00 80
F00:0056       	; right channel mix
F00:0057       	move.b	#$10,(SID0_RGHT,a0)
               S08:0000783C:  11 7C 00 10 00 81
F00:0058       	; play bell by opening gate on bit0 register #4
F00:0059       	; bit 4 is for a triangle wave form
F00:0060           ; bit 2 is for a ring modulation connected to voice 3
F00:0061       	move.b	#%10000101,($04,a0)
               S08:00007842:  11 7C 00 85 00 04
F00:0062       
F00:0063       
F00:0064       	;lea		$00c00000,a0
F00:0065       	;movec	a0,msp
F00:0066       	;ori.w	#$1000,sr			; activate msp
F00:0067       start_of_loop
F00:0068       	movea.l	#$00d00000,a0
               S08:00007848:  20 7C 00 D0 00 00
F00:0069       	move	a0,usp
               S08:0000784E:  4E 60
F00:0070       	move.l	#$ff50449c,d0		; load blue color value into register d0
               S08:00007850:  20 3C FF 50 44 9C
F00:0071       	move.b	d0,d1
               S08:00007856:  12 00
F00:0072       	lea		$00008000,a0		; load address of background color register into a0
               S08:00007858:  41 F9 00 00 80 00
F00:0073       	move.l	d0,(a0)
               S08:0000785E:  20 80
F00:0074       	move.l	d0,-(a7)			; put on stack
               S08:00007860:  2F 00
F00:0075       	move.b	aap(pc),d1
               S08:00007862:  12 3A F7 9C
F00:0076       	bra.s	start_of_loop
               S08:00007866:  60 E0
F00:0077       	move.w	sr,d0
               S08:00007868:  40 C0
F00:0078       	andi.w	#%1111100011111111,d0
               S08:0000786A:  02 40 F8 FF
F00:0079       	ori.w	#%0000001100000000,d0
               S08:0000786E:  00 40 03 00
F00:0080       	move.w	d0,sr
               S08:00007872:  46 C0
F00:0081       	move.w	$3000.l,$30b0.l
               S08:00007874:  33 F9 00 00 30 00 00 00 30 B0
F00:0082       	addq	#$01,d3
               S08:0000787E:  52 43
F00:0083       	jmp		kernel_main
               S08:00007880:  4E F8 78 00
F00:0084       
F00:0085       	org		$00007ffc
F00:0086       	dc.l	$deadbeef
               S09:00007FFC:  DE AD BE EF


Sections:
S01  seg0
S02  seg10
S03  seg28
S04  seg7c
S05  seg400
S06  seg500
S07  seg7000
S08  seg7800
S09  seg7ffc


Sources:
F00  E64-II_kernel.asm
F01  E64-II_kernel_definitions.asm


Symbols:
start_of_loop EXPR(30792=0x7848) ABS 
aap EXPR(28672=0x7000) ABS 
interrupt_autovector EXPR(1280=0x500) ABS 
exception_handler EXPR(1024=0x400) ABS 
kernel_main EXPR(30720=0x7800) ABS 
CURR_TEXT_COLOR EXPR(32768=0x8000) EQU 
SID0_RGHT EXPR(129=0x81) EQU 
SID0_LEFT EXPR(128=0x80) EQU 
SID1_BASE EXPR(-64224=0xffff0520) UNUSED EQU 
SID0_BASE EXPR(-64256=0xffff0500) EQU 
SOUND_BASE EXPR(-64256=0xffff0500) EQU 
VICV_BASE EXPR(-64512=0xffff0400) EQU 
LF EXPR(10=0xa) UNUSED EQU 
NULL EXPR(0=0x0) UNUSED EQU 
__LINE__ EXPR(86=0x56) INTERNAL 
__FO EXPR(0=0x0) INTERNAL 
__RS EXPR(0=0x0) INTERNAL 
REPTN EXPR(-1=0xffffffff) INTERNAL 
__VASM EXPR(4=0x4) INTERNAL 

There have been no errors.
