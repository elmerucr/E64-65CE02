F00:0001       ; elmerucr - 6/10/2019
F00:0002       ; compiles with vasmm68k_mot
F00:0003       
F00:0004       	org $00000000
F00:0005       	dc.l	$fff0					; vector 0 - supervisor stackpointer
               S01:00000000:  00 00 FF F0
F00:0006       	dc.l	kernel_main				; vector 1 - reset vector
               S01:00000004:  00 00 78 00
F00:0007       	org $00000010
F00:0008       	dc.l	exception_handler		; vector 4 - illegal instruction
               S02:00000010:  00 00 04 00
F00:0009       	org $00000028
F00:0010       	dc.l	exception_handler		; vector 10 - unimpl instruction
               S03:00000028:  00 00 04 00
F00:0011       	dc.l	exception_handler		; vector 11 - unimpl instruction
               S03:0000002C:  00 00 04 00
F00:0012       	org $0000007c
F00:0013       	dc.l	interrupt_autovector	; vector 31 - level 7 interrupt autovector
               S04:0000007C:  00 00 05 00
F00:0014       
F00:0015       ; fake exception handler
F00:0016       	org $00000400
F00:0017       exception_handler
F00:0018       	move.l #$deadbeef,d0
               S05:00000400:  20 3C DE AD BE EF
F00:0019       	rte
               S05:00000406:  4E 73
F00:0020       
F00:0021       ; level 7 interrupt autovector
F00:0022       	org $00000500
F00:0023       interrupt_autovector
F00:0024       	rte
               S06:00000500:  4E 73
F00:0025       
F00:0026       	org $00007000
F00:0027       aap
F00:0028       	dc.b	$fe
               S07:00007000:  FE
F00:0029       
F00:0030       ; start of main kernel code
F00:0031       	org	$7800
F00:0032       kernel_main
F00:0033       	lea		$00c00000,a0
               S08:00007800:  41 F9 00 C0 00 00
F00:0034       	movec	a0,msp
               S08:00007806:  4E 7B 88 03
F00:0035       	ori.w	#$1000,sr
               S08:0000780A:  00 7C 10 00
F00:0036       	movea.l	#$00d00000,a0
               S08:0000780E:  20 7C 00 D0 00 00
F00:0037       	move	a0,usp
               S08:00007814:  4E 60
F00:0038       	move.l	#$ff50449c,d0		; load blue color value into register d0
               S08:00007816:  20 3C FF 50 44 9C
F00:0039       	move.b	d0,d1
               S08:0000781C:  12 00
F00:0040       	lea		$00008000,a0		; load address of background color register into a0
               S08:0000781E:  41 F9 00 00 80 00
F00:0041       	move.l	d0,(a0)
               S08:00007824:  20 80
F00:0042       	move.l	d0,-(a7)			; put on stack
               S08:00007826:  2F 00
F00:0043       	move.b	aap(pc),d1
               S08:00007828:  12 3A F7 D6
F00:0044       	bra.s	kernel_main
               S08:0000782C:  60 D2
F00:0045       	move.w	sr,d0
               S08:0000782E:  40 C0
F00:0046       	andi.w	#%1111100011111111,d0
               S08:00007830:  02 40 F8 FF
F00:0047       	ori.w	#%0000001100000000,d0
               S08:00007834:  00 40 03 00
F00:0048       	move.w	d0,sr
               S08:00007838:  46 C0
F00:0049       	move.w	$3000.l,$30b0.l
               S08:0000783A:  33 F9 00 00 30 00 00 00 30 B0
F00:0050       	addq	#$01,d3
               S08:00007844:  52 43
F00:0051       	jmp		kernel_main
               S08:00007846:  4E F8 78 00
F00:0052       
F00:0053       	org $00007ffc
F00:0054       	dc.l	$deadbeef
               S09:00007FFC:  DE AD BE EF


Sections:
S01  seg0
S02  seg10
S03  seg28
S04  seg7c
S05  seg400
S06  seg500
S07  seg7000
S08  seg7800
S09  seg7ffc


Sources:
F00  E64-II_kernel.asm


Symbols:
aap EXPR(28672=0x7000) ABS 
interrupt_autovector EXPR(1280=0x500) ABS 
exception_handler EXPR(1024=0x400) ABS 
kernel_main EXPR(30720=0x7800) ABS 
__LINE__ EXPR(54=0x36) INTERNAL 
__FO EXPR(0=0x0) INTERNAL 
__RS EXPR(0=0x0) INTERNAL 
REPTN EXPR(-1=0xffffffff) INTERNAL 
__VASM EXPR(4=0x4) INTERNAL 

There have been no errors.
